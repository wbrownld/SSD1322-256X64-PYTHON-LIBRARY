# -*- coding: utf-8 -*-
class OLEDWindow:
    
    # A window area on the OLED screen. The OLED hardware allows
    # you to set the data cursor to respect row/column boundaries.
    # Thus writes automatically scroll inside a smaller window. That
    # makes this class easy to implement.
    #
    # X coordinates and WIDTH values must be multiples of 4 pixels. This
    # is a hardware constraint.
    
    def __init__(self, oled, x, y, width, height):
        # x and width must be multiples of 4
        self.x = x
        self.y = y
        self.width = (width/4)*4
        self.height = height
        self.oled = oled
        # Make and clear the screen buffer
        self.screenBuffer = [0]*(width/2)*height
    
    def DrawScreenBuffer(self):
        self.oled.set_data_window(self.x, self.y, self.width, self.height)        
        self.oled.Write_Instruction(0x5c)        
        #for m in xrange(len(self.screenBuffer)):
            #self.oled.Write_Data(self.screenBuffer[m])
        self.oled.writeDataBytes(self.screenBuffer[0:4096])
        self.oled.writeDataBytes(self.screenBuffer[4096:])
        
    def DrawPixel(self, x, y, color):
        color = color & 0x0F
        ofs = y * self.width/2
        ofs = ofs + x/2 # 2 pixels per byte across row
        if x%2 == 0: # even
            v = self.screenBuffer[ofs] & 0x0F
            v = v | (color<<4)
        else:
            v = self.screenBuffer[ofs] & 0xF0
            v = v | color
        self.screenBuffer[ofs] = v     

    def DrawLine(self, start, end, color):
        """Bresenham's Line Algorithm       
        """
        # Setup initial conditions
        x1, y1 = start
        x2, y2 = end
        dx = x2 - x1
        dy = y2 - y1
     
        # Determine how steep the line is
        is_steep = abs(dy) > abs(dx)
     
        # Rotate line
        if is_steep:
            x1, y1 = y1, x1
            x2, y2 = y2, x2
     
        # Swap start and end points if necessary and store swap state
        if x1 > x2:
            x1, x2 = x2, x1
            y1, y2 = y2, y1
     
        # Recalculate differentials
        dx = x2 - x1
        dy = y2 - y1
     
        # Calculate error
        error = int(dx / 2.0)
        ystep = 1 if y1 < y2 else -1
     
        # Iterate over bounding box generating points between start and end
        y = y1
        points = []
        for x in range(x1, x2 + 1):
            coord = (y, x) if is_steep else (x, y)
            #
            self.DrawPixel(coord[0], coord[1], color)
            #
            error -= abs(dy)
            if error < 0:
                y += ystep
                error += dx       
    
    def DrawHLine(self, x, y, length, color):           # Draw horizontal line
        # self.DrawLine((x, y), (x+w-1, y), color)
        for xx in xrange(length):                       # Faster than DrawLine method
            self.DrawPixel(x + xx, y, color)

    def DrawVLine(self, x, y, height, color):           # Draw vertical line
        # self.DrawLine((x, y), (x, y+h-1), color)
        for yy in xrange(height):                       # Faster than DrawLine method
            self.DrawPixel(x, y + yy, color)

    def DrawHArrowRight(self, x, y, lenght, color):
        self.DrawHLine(x, y, lenght, color)
        self.DrawLine((x+lenght-1, y), (x+lenght-5, y-4), color)
        self.DrawLine((x+lenght-1, y), (x+lenght-5, y+4), color)

    def DrawHArrowLeft(self, x, y, lenght, color):
        self.DrawHLine(x, y, lenght, color)
        self.DrawLine((x, y), (x+4, y-4), color)
        self.DrawLine((x, y), (x+4, y+4), color)

    def DrawVArrowTop(self, x, y, height, color):
        self.DrawVLine(x, y, height, color)
        self.DrawLine((x, y), (x+4, y+4), color)
        self.DrawLine((x, y), (x-4, y+4), color)

    def DrawVArrowLow(self, x, y, height, color):
        self.DrawVLine(x, y, height, color)
        self.DrawLine((x, y+height), (x-4, y+height-4), color)
        self.DrawLine((x, y+height), (x+4, y+height-4), color)

    def DrawDblHArrow(self, x, y, lenght, color):
        self.DrawHLine(x, y, lenght, color)
        self.DrawLine((x+lenght-1, y), (x+lenght-5, y-4), color)
        self.DrawLine((x+lenght-1, y), (x+lenght-5, y+4), color)
        self.DrawLine((x, y), (x+4, y-4), color)
        self.DrawLine((x, y), (x+4, y+4), color)

    def DrawDblVArrow(self, x, y, height, color):
        self.DrawVLine(x, y, height, color)
        self.DrawLine((x, y), (x+4, y+4), color)
        self.DrawLine((x, y), (x-4, y+4), color)
        self.DrawLine((x, y+height), (x-4, y+height-4), color)
        self.DrawLine((x, y+height), (x+4, y+height-4), color)

    def draw_rectangle(self, x, y, width, height, color):
        for xx in xrange(width):
            self.DrawPixel(x+xx, y, color)
            self.DrawPixel(x+xx, y+height-1, color)
        for yy in xrange(height):
            self.DrawPixel(x, y+yy, color)
            self.DrawPixel(x+width-1, y+yy, color)

    def DrawFrame(self, x, y, w, h, color):         # Draw_rectangle alternative (much faster)
        self.DrawHLine(x, y, w, color)
        self.DrawHLine(x, y+h-1, w, color)
        self.DrawVLine(x, y, h, color)
        self.DrawVLine(x+w-1, y, h, color)

    def DrawRFrame(self, x, y, w, h, r, color):     # Draw Rounded Corners Rectangle 
        self.DrawHLine(x+r, y, w-2*r, color)        # Top
        self.DrawHLine(x+r, y+h-1, w-2*r, color)    # Bottom
        self.DrawVLine(x, y+r, h-2*r, color)        # Left
        self.DrawVLine(x+w-1, y+r, h-2*r, color)    # Right
        # draw four corners
        self.DrawCircleHelper(x+r, y+r, r, 1, color)
        self.DrawCircleHelper(x+w-r-1, y+r, r, 2, color)
        self.DrawCircleHelper(x+w-r-1, y+h-r-1, r, 4, color)
        self.DrawCircleHelper(x+r, y+h-r-1, r, 8, color)
        
    def DrawBox(self, x, y, w, h, color):           # Draw Filled Rectangle
        for t in range(x, x+w):
            self.DrawVLine(t, y, h, color)
            
    def DrawRBox(self, x, y, w, h, r, color):       # Draw Rounded Corners Filled Rectangle
        self.DrawBox(x+r, y, w-2*r, h, color)
        # draw four corners
        self.FillCircleHelper(x+w-r-1, y+r, r, 1, h-2*r-1, color)
        self.FillCircleHelper(x+r    , y+r, r, 2, h-2*r-1, color)
            
    def DrawCircle(self, x0, y0, r, color):         # Draw Circle
        f = 1 - r
        ddF_x = 1
        ddF_y = -2 * r
        x = 0
        y = r

        self.DrawPixel(x0, y0+r, color)
        self.DrawPixel(x0, y0-r, color)
        self.DrawPixel(x0+r, y0, color)
        self.DrawPixel(x0-r, y0, color)

        while x < y:
            if f >= 0:
                y -= 1
                ddF_y += 2
                f += ddF_y
            
            x += 1
            ddF_x += 2
            f += ddF_x

            self.DrawPixel(x0+x, y0+y, color)
            self.DrawPixel(x0-x, y0+y, color)
            self.DrawPixel(x0+x, y0-y, color)
            self.DrawPixel(x0-x, y0-y, color)
            self.DrawPixel(x0+y, y0+x, color)
            self.DrawPixel(x0-y, y0+x, color)
            self.DrawPixel(x0+y, y0-x, color)
            self.DrawPixel(x0-y, y0-x, color)

    def DrawCircleHelper(self, x0, y0, r, cornername, color):
        f = 1 - r
        ddF_x = 1
        ddF_y = -2 * r
        x = 0
        y = r
    
        while x < y:
            if f >= 0:
                y -= 1
                ddF_y += 2
                f += ddF_y
                
            x += 1
            ddF_x += 2
            f += ddF_x
            
            if (cornername & 0x4):
                self.DrawPixel(x0 + x, y0 + y, color)
                self.DrawPixel(x0 + y, y0 + x, color)
                 
            if (cornername & 0x2):
                self.DrawPixel(x0 + x, y0 - y, color)
                self.DrawPixel(x0 + y, y0 - x, color)
                
            if (cornername & 0x8):
                self.DrawPixel(x0 - y, y0 + x, color)
                self.DrawPixel(x0 - x, y0 + y, color)
                
            if (cornername & 0x1):
                self.DrawPixel(x0 - y, y0 - x, color)
                self.DrawPixel(x0 - x, y0 - y, color)
            
    def DrawDisc(self, x0, y0, r, color):                   # Draw Filled Circle
        self.DrawVLine(x0, y0-r, 2*r+1, color)
        self.FillCircleHelper(x0, y0, r, 3, 0, color)

    def FillCircleHelper(self, x0, y0, r, cornername, delta, color):
        f = 1 - r
        ddF_x = 1
        ddF_y = -2 * r
        x = 0
        y = r
        
        while x < y:
            if (f >= 0):
                y -= 1
                ddF_y += 2
                f += ddF_y

            x += 1
            ddF_x += 2
            f += ddF_x

            if (cornername & 0x1):
                self.DrawVLine(x0+x, y0-y, 2*y+1+delta, color)
                self.DrawVLine(x0+y, y0-x, 2*x+1+delta, color)

            if (cornername & 0x2):
                self.DrawVLine(x0-x, y0-y, 2*y+1+delta, color)
                self.DrawVLine(x0-y, y0-x, 2*x+1+delta, color)
    
    def DrawEllipseInRect(self, x0, y0, x1, y1, color):
        a = abs(x1 - x0)
        b = abs(y1 - y0)
        b1 = b & 1 # values of diameter
        dx = 4 * (1 - a) * b * b
        dy = 4 * (b1 + 1) * a * a # error increment
        err = dx + dy + b1 * a * a # error of 1.step
        if x0 > x1: # if called with swapped points
            x0 = x1
            x1 += a
        if y0 > y1: # .. exchange them
            y0 = y1; 
        y0 += (b + 1) / 2 # starting pixel
        y1 = y0 - b1
        a *= 8 * a
        b1 = 8 * b * b

        while x0 <= x1:
            self.DrawPixel(x1, y0, color) # I. Quadrant
            self.DrawPixel(x0, y0, color) # II. Quadrant
            self.DrawPixel(x0, y1, color) # III. Quadrant
            self.DrawPixel(x1, y1, color) # IV. Quadrant
            e2 = 2 * err
            if e2 >= dx: # x step
                x0 += 1
                x1 -= 1
                dx += b1
                err += dx
            if e2 <= dy: # y step
                y0 += 1
                y1 -= 1
                dy += a
                err += dy
        while (y0 - y1 < b): # too early stop of flat ellipses a=1
            y0 += 1
            self.DrawPixel(x0 - 1, y0, color) # -> complete tip of ellipse
            y1 -= 1
            self.DrawPixel(x0 - 1, y1, color)

    def DrawEllipse(self, x0, y0, rx, ry, color):
        rxrx2 = rx
        rxrx2 *= rx
        rxrx2 *= 2
        ryry2 = ry
        ryry2 *= ry
        ryry2 *= 2
        x = rx
        y = 0
        xchg = 1
        xchg -= rx
        xchg -= rx
        xchg *= ry
        xchg *= ry
        ychg = rx
        ychg *= rx
        err = 0
        stopx = ryry2
        stopx *= rx
        stopy = 0
        while stopx >= stopy:
            self.DrawPixel(x0+x, y0-y, color)   # Upper right
            self.DrawPixel(x0-x, y0-y, color)   # Upper left
            self.DrawPixel(x0+x, y0+y, color)   # Lower right
            self.DrawPixel(x0-x, y0+y, color)   # Lower left
            y += 1
            stopy += rxrx2
            err += ychg
            ychg += rxrx2
            if (2 * err + xchg > 0):
                x -= 1
                stopx -= ryry2
                err += xchg
                xchg += ryry2
        x = 0
        y = ry
        xchg = ry
        xchg *= ry
        ychg = 1
        ychg -= ry
        ychg -= ry
        ychg *= rx
        ychg *= rx
        err = 0
        stopx = 0
        stopy = rxrx2
        stopy *= ry
        while stopx <= stopy:
            self.DrawPixel(x0+x, y0-y, color)   # Upper right
            self.DrawPixel(x0-x, y0-y, color)   # Upper left
            self.DrawPixel(x0+x, y0+y, color)   # Lower right
            self.DrawPixel(x0-x, y0+y, color)   # Lower left
            x += 1
            stopx += ryry2
            err += xchg
            xchg += ryry2
            if (2 * err + ychg > 0):
                y -= 1
                stopy -= rxrx2
                err += ychg
                ychg += rxrx2

    def DrawFilledEllipse(self, x0, y0, rx, ry, color):
        rxrx2 = rx
        rxrx2 *= rx
        rxrx2 *= 2
        ryry2 = ry
        ryry2 *= ry
        ryry2 *= 2
        x = rx
        y = 0
        xchg = 1
        xchg -= rx
        xchg -= rx
        xchg *= ry
        xchg *= ry
        ychg = rx
        ychg *= rx
        err = 0
        stopx = ryry2
        stopx *= rx
        stopy = 0
        while stopx >= stopy:
            self.DrawVLine(x0 + x, y0 - y, y + 1, color)    # UPPER RIGHT
            self.DrawVLine(x0 - x, y0 - y, y + 1, color)    # UPPER LEFT
            self.DrawVLine(x0 + x, y0, y + 1, color)        # LOWER RIGHT
            self.DrawVLine(x0 - x, y0, y + 1, color)        # UPPER LEFT
            y += 1
            stopy += rxrx2
            err += ychg
            ychg += rxrx2
            if (2 * err + xchg > 0):
                x -= 1
                stopx -= ryry2
                err += xchg
                xchg += ryry2
        x = 0
        y = ry
        xchg = ry
        xchg *= ry
        ychg = 1
        ychg -= ry
        ychg -= ry
        ychg *= rx
        ychg *= rx
        err = 0
        stopx = 0
        stopy = rxrx2
        stopy *= ry
        while stopx <= stopy:
            self.DrawVLine(x0 + x, y0 - y, y + 1, color)    # UPPER RIGHT
            self.DrawVLine(x0 - x, y0 - y, y + 1, color)    # UPPER LEFT
            self.DrawVLine(x0 + x, y0, y + 1, color)        # LOWER RIGHT
            self.DrawVLine(x0 - x, y0, y + 1, color)        # UPPER LEFT
            x += 1
            stopx += ryry2
            err += xchg
            xchg += ryry2
            if (2 * err + ychg > 0):
                y -= 1
                stopy -= rxrx2
                err += ychg
                ychg += rxrx2
        
    def DrawTriangle(self, x0, y0, x1, y1, x2, y2, color):   # Draw a Triangle
        self.DrawLine((x0, y0), (x1, y1), color)
        self.DrawLine((x1, y1), (x2, y2), color)
        self.DrawLine((x2, y2), (x0, y0), color)
        
    def DrawFilledTriangle(self, x0, y0, x1, y1, x2, y2, color):    # Draw a filled Triangle
        if y0 > y1:
            y0, y1 = y1, y0
            x0, x1 = x1, x0
        if y1 > y2:
            y2, y1 = y1, y2
            x2, x1 = x1, x2
        if y0 > y1:
            y0, y1 = y1, y0
            x0, x1 = x1, x0
        # a = 0
        # b = 0
        # y = 0
        # last = 0
        if y0 == y2:
            a = x0
            b = x0
            if x1 < a:
                a = x1
            elif x1 > b:
                b = x1
            if x2 < a:
                a = x2
            elif x2 > b:
                b = x2
            self.DrawHLine(a, y0, b-a+1, color)
            return
        dx01 = x1 - x0
        dy01 = y1 - y0
        dx02 = x2 - x0
        dy02 = y2 - y0
        dx12 = x2 - x1
        dy12 = y2 - y1
        if dy01 == 0:
            dy01 = 1
        if dy02 == 0:
            dy02 = 1
        if dy12 == 0:
            dy12 = 1
        sa = 0
        sb = 0
        if y1 == y2:
            last = y1
        else:
            last = y1-1
        for y in range(y0, last+1):
        # for y in range(y, y0 + last + 1):
            a = x0 + sa // dy01
            b = x0 + sb // dy02
            sa += dx01
            sb += dx02
            if a > b:
                a, b = b, a
            self.DrawHLine(a, y, b - a + 1, color)
        sa = dx12 * (y - y1)
        sb = dx02 * (y - y0)
        while y <= y2:
            a = x1 + sa // dy12
            b = x0 + sb // dy02
            sa += dx12
            sb += dx02
            if a > b:
                a, b = b, a
            self.DrawHLine(a, y, b - a + 1, color)
            y += 1
                
    def DrawText(self, x, y, mes, color, inv):
        # if inv = 0 --> NORMAL TEXT
        # if inv = 1 --> INVERTED TEXT
        for c in mes:
            self.DrawImageTextwInv(x, y, 8, 8, color, FONT_5x7, (ord(c)-32)*8, inv)
            if ord(c) == 32 or ord(c) == 46:            # <Space> or .
                x += 4
            else:
                x += 8
    
    def DrawImageTextwInv(self, x, y, width, height, color, data, offs, inv):
        # if inv = 0 --> NORMAL TEXT
        # if inv = 1 --> INVERTED TEXT
        pos = offs
        for yy in xrange(height):
            ox = x
            if inv == 0:   # --> NORMAL TEXT
                for xx in xrange(width/8):
                    mask = 128
                    for pp in xrange(8):
                        if((data[pos] & mask)>0):
                            self.DrawPixel(x, y, color)
                        else:
                            self.DrawPixel(x, y, 0)
                        mask = mask>>1
                        x += 1
                    pos += 1
            else:           # --> INVERTED TEXT
                for xx in xrange(width/8):
                    mask = 128
                    for pp in xrange(8):
                        if((data[pos] & mask)>0):
                            self.DrawPixel(x, y, 0)
                        else:
                            self.DrawPixel(x, y, color)
                        mask = mask>>1
                        x += 1
                    pos += 1
            x = ox
            y += 1
    
    def DrawText1616(self, x, y, mes, color):
        for c in mes:
            self.DrawImage(x, y, 16, 16, color, FONT_16x16,(ord(c)-32)*32)
            if ord(c) == 32 or ord(c) == 46:        # <Space> or .
                x += 5
            elif ord(c) == 73 or ord(c) == 105:     # I or i
                x += 6
            elif ord(c) == 49 or ord(c) == 44 or ord(c) == 58 or ord(c) == 59 or ord(c) == 39:          # 1 or , or : or ; or '
                x += 7
            elif ord(c) == 33 or ord(c) == 91 or ord(c) == 93 or ord(c) == 106 or ord(c) == 108:        # ! or [ or ] or j or l
                x += 9
            elif ord(c) == 48:                      # 0
                x += 11
            elif ord(c) == 37 or ord(c) == 87 or ord(c) == 109 or ord(c) == 119:         # % or W or m or w
                x += 16
            else:
                x += 13
                
    def DrawImage(self, x, y, width, height, color, data, offs):
        pos = offs
        for yy in xrange(height):
            ox = x
            for xx in xrange(width/8):
                mask = 128
                for pp in xrange(8):
                    if((data[pos] & mask)>0):
                        self.DrawPixel(x, y, color)
                    else:
                        self.DrawPixel(x, y, 0)
                    mask = mask>>1
                    x += 1
                pos += 1
            x = ox
            y += 1      

FONT_5x7 = [
# Standard ASCII 8x8 font (8 x 8 pixels) 0x20-0x7E (32-126)
######################
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
######################
0x80,  # *
0x80,  # *
0x80,  # *
0x80,  # *
0x80,  # *
0x00,  #
0x80,  # *
0x00,  #
######################
0xD8,  # ** **
0x90,  # *  *
0x48,  #  *  *
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
######################
0x00,  #
0x50,  #  * *
0xF8,  # *****
0x50,  #  * *
0xF8,  # *****
0x50,  #  * *
0x00,  #
0x00,  #
######################
0x20,  #   *
0x78,  #  ****
0xA0,  # * *
0x70,  #  ***
0x28,  #   * *
0xF0,  # ****
0x20,  #   *
0x00,  #
######################
0x88,  # *   *
0x88,  # *   *
0x10,  #    *
0x20,  #   *
0x40,  #  *
0x88,  # *   *
0x88,  # *   *
0x00,  #
######################
0x40,  #  *
0xA0,  # * *
0xA0,  # * *
0x40,  #  *
0xA8,  # * * *
0x90,  # *  *
0x68,  # ** *
0x00,  #
######################
0x30,  #   **
0x10,  #    *
0x20,  #   *
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
######################
0x08,  #     *
0x10,  #    *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x10,  #    *
0x08,  #     *
0x00,  #
######################
0x80,  # *
0x40,  #  *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x40,  #  *
0x80,  # *
0x00,  #
######################
0x00,  #
0x20,  #   *
0xA8,  # * * *
0x70,  #  ***
0x70,  #  ***
0xA8,  # * * *
0x20,  #   *
0x00,  #
######################
0x00,  #
0x20,  #   *
0x20,  #   *
0xF8,  # *****
0x20,  #   *
0x20,  #   *
0x00,  #
0x00,  #
######################
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0xC0,  # **
0x40,  #  *
0x80,  # *
######################
0x00,  #
0x00,  #
0x00,  #
0xF8,  # *****
0x00,  #
0x00,  #
0x00,  #
0x00,  #
######################
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0xC0,  # **
0xC0,  # **
0x00,  #
######################
0x08,  #     *
0x08,  #     *
0x10,  #    *
0x20,  #   *
0x40,  #  *
0x80,  # *
0x80,  # *
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x98,  # *  **
0xA8,  # * * *
0xC8,  # **  *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0x20,  #   *
0x60,  #  **
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x70,  #  ***
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x08,  #     *
0x10,  #    *
0x60,  #  **
0x80,  # *
0xF8,  # *****
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x08,  #     *
0x70,  #  ***
0x08,  #     *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0x10,  #    *
0x30,  #   **
0x50,  #  * *
0x90,  # *  *
0xF8,  # *****
0x10,  #    *
0x10,  #    *
0x00,  #
######################
0xF8,  # *****
0x80,  # *
0xF0,  # ****
0x08,  #     *
0x08,  #     *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0x30,  #   **
0x40,  #  *
0x80,  # *
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0xF8,  # *****
0x08,  #     *
0x10,  #    *
0x20,  #   *
0x40,  #  *
0x40,  #  *
0x40,  #  *
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x88,  # *   *
0x70,  #  ***
0x88,  # *   *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x88,  # *   *
0x78,  #  ****
0x08,  #     *
0x10,  #    *
0x60,  #  **
0x00,  #
######################
0x00,  #
0xC0,  # **
0xC0,  # **
0x00,  #
0xC0,  # **
0xC0,  # **
0x00,  #
0x00,  #
######################
0x00,  #
0xC0,  # **
0xC0,  # **
0x00,  #
0xC0,  # **
0xC0,  # **
0x40,  #  *
0x80,  # *
######################
0x08,  #     *
0x10,  #    *
0x20,  #   *
0x40,  #  *
0x20,  #   *
0x10,  #    *
0x08,  #     *
0x00,  #
######################
0x00,  #
0x00,  #
0xF8,  # *****
0x00,  #
0xF8,  # *****
0x00,  #
0x00,  #
0x00,  #
######################
0x80,  # *
0x40,  #  *
0x20,  #   *
0x10,  #    *
0x20,  #   *
0x40,  #  *
0x80,  # *
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x08,  #     *
0x10,  #    *
0x20,  #   *
0x00,  #
0x20,  #   *
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0xA8,  # * * *
0xA8,  # * * *
0xB0,  # * **
0x80,  # *
0x78,  #  ****
0x00,  #
######################
0x20,  #   *
0x50,  #  * *
0x88,  # *   *
0x88,  # *   *
0xF8,  # *****
0x88,  # *   *
0x88,  # *   *
0x00,  #
######################
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0xF0,  # ****
0x00,  #
######################
0x30,  #   **
0x48,  #  *  *
0x80,  # *
0x80,  # *
0x80,  # *
0x48,  #  *  *
0x30,  #   **
0x00,  #
######################
0xE0,  # ***
0x90,  # *  *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x90,  # *  *
0xE0,  # ***
0x00,  #
######################
0xF8,  # *****
0x80,  # *
0x80,  # *
0xF0,  # ****
0x80,  # *
0x80,  # *
0xF8,  # *****
0x00,  #
######################
0xF8,  # *****
0x80,  # *
0x80,  # *
0xF0,  # ****
0x80,  # *
0x80,  # *
0x80,  # *
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x80,  # *
0x80,  # *
0x98,  # *  **
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0xF8,  # *****
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x00,  #
######################
0xF8,  # *****
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0xF8,  # *****
0x00,  #
######################
0x08,  #     *
0x08,  #     *
0x08,  #     *
0x08,  #     *
0x08,  #     *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0x88,  # *   *
0x90,  # *  *
0xA0,  # * *
0xC0,  # **
0xA0,  # * *
0x90,  # *  *
0x88,  # *   *
0x00,  #
######################
0x80,  # *
0x80,  # *
0x80,  # *
0x80,  # *
0x80,  # *
0x80,  # *
0xF8,  # *****
0x00,  #
######################
0x88,  # *   *
0xD8,  # ** **
0xA8,  # * * *
0xA8,  # * * *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x00,  #
######################
0x88,  # *   *
0x88,  # *   *
0xC8,  # **  *
0xA8,  # * * *
0x98,  # *  **
0x88,  # *   *
0x88,  # *   *
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0xF0,  # ****
0x80,  # *
0x80,  # *
0x80,  # *
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0xA8,  # * * *
0x90,  # *  *
0x68,  #  ** *
0x00,  #
######################
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0xF0,  # ****
0xA0,  # * *
0x90,  # *  *
0x88,  # *   *
0x00,  #
######################
0x70,  #  ***
0x88,  # *   *
0x80,  # *
0x70,  #  ***
0x08,  #     *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0xF8,  # *****
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x00,  #
######################
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x50,  #  * *
0x50,  #  * *
0x20,  #   *
0x20,  #   *
0x00,  #
######################
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0xA8,  # * * *
0xA8,  # * * *
0xA8,  # * * *
0x50,  #  * *
0x00,  #
######################
0x88,  # *   *
0x88,  # *   *
0x50,  #  * *
0x20,  #   *
0x50,  #  * *
0x88,  # *   *
0x88,  # *   *
0x00,  #
######################
0x88,  # *   *
0x88,  # *   *
0x50,  #  * *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x00,  #
######################
0xF8,  # *****
0x08,  #     *
0x10,  #    *
0x20,  #   *
0x40,  #  *
0x80,  # *
0xF8,  # *****
0x00,  #
######################
0xF8,  # *****
0xC0,  # **
0xC0,  # **
0xC0,  # **
0xC0,  # **
0xC0,  # **
0xF8,  # *****
0x00,  #
######################
0x80,  # *
0x80,  # *
0x40,  #  *
0x20,  #   *
0x10,  #    *
0x08,  #     *
0x08,  #     *
0x00,  #
######################
0xF8,  # *****
0x18,  #    **
0x18,  #    **
0x18,  #    **
0x18,  #    **
0x18,  #    **
0xF8,  # *****
0x00,  #
######################
0x00,  #
0x00,  #
0x20,  #   *
0x50,  #  * *
0x88,  # *   *
0x00,  #
0x00,  #
0x00,  #
######################
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0xF8,  # *****
######################
0x10,  #    *
0x20,  #   *
0x30,  #   **
0x00,  #
0x00,  #
0x00,  #
0x00,  #
0x00,  #
######################
0x00,  #
0x00,  #
0x70,  #  ***
0x08,  #     *
0x78,  #  ****
0x88,  # *   *
0x78,  #  ****
0x00,  #
######################
0x80,  # *
0x80,  # *
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0xF0,  # ****
0x00,  #
######################
0x00,  #
0x00,  #
0x78,  #  ****
0x80,  # *
0x80,  # *
0x80,  # *
0x78,  #  ****
0x00,  #
######################
0x08,  #     *
0x08,  #     *
0x78,  #  ****
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x78,  #  ****
0x00,  #
######################
0x00,  #
0x00,  #
0x70,  #  ***
0x88,  # *   *
0xF8,  # *****
0x80,  # *
0x78,  #  ****
0x00,  #
######################
0x30,  #   **
0x48,  #  *  *
0x40,  #  *
0xF0,  # ****
0x40,  #  *
0x40,  #  *
0x40,  #  *
0x00,  #
######################
0x00,  #
0x00,  #
0x70,  #  ***
0x88,  # *   *
0x88,  # *   *
0x78,  #  ****
0x08,  #     *
0x70,  #  ***
######################
0x80,  # *
0x80,  # *
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x00,  #
######################
0x20,  #   *
0x00,  #
0x60,  #  **
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x70,  #  ***
0x00,  #
######################
0x10,  #    *
0x00,  #
0x30,  #   **
0x10,  #    *
0x10,  #    *
0x10,  #    *
0x90,  # *  *
0x60,  #  **
######################
0x80,  # *
0x80,  # *
0x88,  # *   *
0x90,  # *  *
0x60,  #  **
0x90,  # *  *
0x88,  # *   *
0x00,  #
######################
0x60,  #  **
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x70,  #  ***
0x00,  #
######################
0x00,  #
0x00,  #
0xD8,  # ** **
0xA8,  # * * *
0xA8,  # * * *
0xA8,  # * * *
0x88,  # *   *
0x00,  #
######################
0x00,  #
0x00,  #
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x00,  #
######################
0x00,  #
0x00,  #
0x70,  #  ***
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x70,  #  ***
0x00,  #
######################
0x00,  #
0x00,  #
0xF0,  # ****
0x88,  # *   *
0x88,  # *   *
0xF0,  # ****
0x80,  # *
0x80,  # *
######################
0x00,  #
0x00,  #
0x78,  #  ****
0x88,  # *   *
0x88,  # *   *
0x78,  #  ****
0x08,  #     *
0x08,  #     *
######################
0x00,  #
0x00,  #
0xB8,  # * ***
0xC0,  # **
0x80,  # *
0x80,  # *
0x80,  # *
0x00,  #
######################
0x00,  #
0x00,  #
0x78,  #  ****
0x80,  # *
0x70,  #  ***
0x08,  #     *
0xF0,  # ****
0x00,  #
######################
0x40,  #  *
0x40,  #  *
0xF0,  # ****
0x40,  #  *
0x40,  #  *
0x48,  #  *  *
0x30,  #   **
0x00,  #
######################
0x00,  #
0x00,  #
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x98,  # *  **
0x68,  #  ** *
0x00,  #
######################
0x00,  #
0x00,  #
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x50,  #  * *
0x20,  #   *
0x00,  #
######################
0x00,  #
0x00,  #
0x88,  # *   *
0x88,  # *   *
0xA8,  # * * *
0xA8,  # * * *
0xD8,  # ** **
0x00,  #
######################
0x00,  #
0x00,  #
0x88,  # *   *
0x50,  #  * *
0x20,  #   *
0x50,  #  * *
0x88,  # *   *
0x00,  #
######################
0x00,  #
0x00,  #
0x88,  # *   *
0x88,  # *   *
0x88,  # *   *
0x78,  #  ****
0x08,  #     *
0x70,  #  ***
######################
0x00,  #
0x00,  #
0xF8,  # *****
0x10,  #    *
0x20,  #   *
0x40,  #  *
0xF8,  # *****
0x00,  #
######################
0x38,  #   ***
0x60,  #  **
0x60,  #  **
0xC0,  # **
0x60,  #  **
0x60,  #  **
0x38,  #   ***
0x00,  #
######################
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
0x20,  #   *
######################
0xE0,  # ***
0x30,  #   **
0x30,  #   **
0x18,  #    **
0x30,  #   **
0x30,  #   **
0xE0,  # ***
0x00,  #
######################
0x00,  #
0x40,  #  *
0xA4,  # * *  *
0x18,  #    **
0x00,  #
0x00,  #
0x00,  #
0x00,  #
]

FONT_16x16 = [
# Standard ASCII 16x16 font (16 x 16 pixels) 0x20-0x7E (32-126)
###################### < space >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < ! >
0x00,0x00,  #
0x00,0x00,  #
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x00,0x00,  #
0x06,0x00,  #      **
0x06,0x00,  #      **
0x00,0x00,  #
0x00,0x00,  #
###################### < " >
0x00,0x00,  #
0x00,0x00,  #
0x06,0x60,  #      **  **
0x06,0x60,  #      **  **
0x06,0x60,  #      **  **
0x06,0x60,  #      **  **
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < # >
0x00,0x00,  #
0x00,0x00,  #
0x03,0x60,  #       ** **
0x03,0x60,  #       ** **
0x06,0xC0,  #      ** **
0x3F,0xF0,  #   **********
0x3F,0xF0,  #   **********
0x06,0xC0,  #      ** **
0x0D,0x80,  #     ** **
0x3F,0xF0,  #   **********
0x3F,0xF0,  #   **********
0x0D,0x80,  #     ** **
0x1B,0x00,  #    ** **
0x1B,0x00,  #    ** **
0x00,0x00,  #
0x00,0x00,  #
###################### < $ >
0x00,0x00,  #
0x01,0x00,  #        *
0x03,0x80,  #       ***
0x07,0xC0,  #      *****
0x0D,0x60,  #     ** * **
0x0D,0x00,  #     ** *
0x0F,0x00,  #     ****
0x07,0x80,  #      *****
0x03,0xC0,  #       ****
0x01,0xE0,  #        ****
0x0D,0x60,  #     ** * **
0x0D,0x60,  #     ** * **
0x07,0xC0,  #      *****
0x03,0x80,  #       ***
0x01,0x00,  #        *
0x00,0x00,  # 
###################### < % >
0x00,0x00,  #
0x00,0x00,  #
0x3C,0x18,  #   ****     **
0x66,0x30,  #  **  **   **
0x66,0x30,  #  **  **   **
0x66,0x60,  #  **  **  **
0x66,0xC0,  #  **  ** **
0x3C,0xC0,  #   ****  **
0x01,0x9E,  #        **  ****
0x01,0xB3,  #        ** **  **
0x03,0x33,  #       **  **  **
0x03,0x33,  #       **  **  **
0x06,0x33,  #      **   **  **
0x0C,0x1E,  #     **     ****
0x00,0x00,  #
0x00,0x00,  #
###################### < & >
0x00,0x00,  #
0x00,0x00,  #
0x07,0xC0,  #      *****
0x0F,0xE0,  #     *******
0x0C,0x60,  #     **   **
0x0C,0x60,  #     **   **
0x07,0xC0,  #      *****
0x07,0x80,  #      ****
0x0D,0x90,  #     ** **  *
0x19,0xD8,  #    **  *** **
0x18,0xF0,  #    **   ****
0x18,0x78,  #    **    ****
0x0F,0xFC,  #     **********
0x07,0x88,  #      ****   *
0x00,0x00,  #
0x00,0x00,  #
###################### < ' >
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < ( >
0x00,0x00,  #
0x01,0x80,  #        **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x01,0x80,  #        **
0x00,0x00,  #
0x00,0x00,  #
###################### < ) >
0x00,0x00,  #
0x06,0x00,  #      **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x06,0x00,  #      **
0x00,0x00,  #
0x00,0x00,  #
###################### < * >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x03,0x80,  #       ***
0x03,0x80,  #       ***
0x33,0x98,  #   **  ***  **
0x3F,0xF8,  #   ***********
0x07,0xC0,  #      *****
0x07,0xC0,  #      *****
0x0E,0xE0,  #     *** ***
0x1C,0x70,  #    ***   ***
0x04,0x40,  #      *   *
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < + >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x07,0xF8,  #      ********
0x07,0xF8,  #      ********
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < , >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x04,0x00,  #      *
0x04,0x00,  #      *
0x08,0x00,  #     *
0x00,0x00,  #
###################### < - >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0F,0x80,  #       *****
0x0F,0x80,  #       *****
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < . >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x18,0x00,  #    **
0x18,0x00,  #    **
0x00,0x00,  #
0x00,0x00,  #
###################### < / >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x60,  #          **
0x00,0x60,  #          **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x00,0x00,  #
0x00,0x00,  #
###################### < 0 >
0x00,0x00,  #
0x00,0x00,  #
0x0F,0x00,  #     ****
0x1F,0x80,  #    ******
0x39,0xC0,  #   ***  ***
0x30,0xC0,  #   **    **
0x30,0xC0,  #   **    **
0x30,0xC0,  #   **    **
0x30,0xC0,  #   **    **
0x30,0xC0,  #   **    **
0x30,0xC0,  #   **    **
0x39,0xC0,  #   **    **
0x1F,0x80,  #    ******
0x0F,0x00,  #     ****
0x00,0x00,  #
0x00,0x00,  #
###################### < 1 >
0x00,0x00,  #
0x00,0x00,  #
0x06,0x00,  #      **
0x0E,0x00,  #     ***
0x1E,0x00,  #    ****
0x36,0x00,  #   ** **
0x26,0x00,  #   *  **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x00,0x00,  #
0x00,0x00,  #
###################### < 2 >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xC0,  #       ****
0x07,0xE0,  #      ******
0x0E,0x30,  #     ***   **
0x0C,0x30,  #     **    **
0x00,0x30,  #           **
0x00,0x60,  #          **
0x00,0xE0,  #         ***
0x01,0xC0,  #        ***
0x03,0x80,  #       ***
0x06,0x00,  #      **
0x0F,0xF0,  #     ********
0x0F,0xF0,  #     ********
0x00,0x00,  #
0x00,0x00,  #
###################### < 3 >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xE0,  #       *****
0x07,0xF0,  #      *******
0x0E,0x30,  #     ***   **
0x00,0x30,  #           **
0x01,0xE0,  #        ****
0x01,0xE0,  #        ****
0x00,0x70,  #          ***
0x00,0x30,  #           **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x07,0xE0,  #      ******
0x03,0xC0,  #       ****
0x00,0x00,  #
0x00,0x00,  #
###################### < 4 >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x60,  #          **
0x00,0xE0,  #         ***
0x00,0xE0,  #         ***
0x01,0xE0,  #        ****
0x03,0x60,  #       ** **
0x03,0x60,  #       ** **
0x06,0x60,  #      **  **
0x0C,0x60,  #     **   **
0x0F,0xF0,  #     ********
0x0F,0xF0,  #     ********
0x00,0x60,  #          **
0x00,0x60,  #          **
0x00,0x00,  #
0x00,0x00,  #
###################### < 5 >
0x00,0x00,  #
0x00,0x00,  #
0x07,0xE0,  #      ******
0x07,0xE0,  #      ******
0x06,0x00,  #      **
0x0C,0x00,  #     **
0x0F,0xC0,  #     ******
0x0F,0xE0,  #     *******
0x0C,0x70,  #     **   ***
0x00,0x30,  #           **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x07,0xE0,  #      ******
0x03,0xC0,  #       ****
0x00,0x00,  #
0x00,0x00,  #
###################### < 6 >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xE0,  #       *****
0x07,0xF0,  #      *******
0x06,0x30,  #      **   **
0x0C,0x00,  #     **
0x0D,0xC0,  #     ** ***
0x0F,0xE0,  #     *******
0x0E,0x70,  #     ***  ***
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x06,0x30,  #      **   **
0x07,0xE0,  #      ******
0x03,0xC0,  #       ****
0x00,0x00,  #
0x00,0x00,  #
###################### < 7 >
0x00,0x00,  #
0x00,0x00,  #
0x0F,0xF0,  #     ********
0x0F,0xF0,  #     ********
0x00,0x60,  #          **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x03,0x80,  #       ***
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x00,0x00,  #
0x00,0x00,  #
###################### < 8 >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xC0,  #       ****
0x07,0xE0,  #      ******
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x07,0xE0,  #      ******
0x07,0xE0,  #      ******
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x07,0xE0,  #      ******
0x03,0xC0,  #       ****
0x00,0x00,  #
0x00,0x00,  #
###################### < 9 >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xC0,  #       ****
0x07,0xE0,  #      ******
0x0C,0x70,  #     **   ***
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x07,0xF0,  #      *******
0x03,0xB0,  #       *** **
0x00,0x30,  #           **
0x0C,0x60,  #     **   **
0x0F,0xE0,  #     *******
0x07,0xC0,  #      *****
0x00,0x00,  #
0x00,0x00,  #
###################### < : >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < ; >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x04,0x00,  #      *
0x04,0x00,  #      *
0x08,0x00,  #     *
0x00,0x00,  #
###################### < < >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x20,  #           *
0x00,0xE0,  #         ***
0x03,0xC0,  #       ****
0x0F,0x00,  #     ****
0x1C,0x00,  #    ***
0x0F,0x00,  #     ****
0x03,0xC0,  #       ****
0x00,0xE0,  #         ***
0x00,0x20,  #           *
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < = >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #    *********
0x1F,0xF0,  #    *********
0x1F,0xF0,  #
0x00,0x00,  #
0x00,0x00,  #    *********
0x1F,0xF0,  #    *********
0x1F,0xF0,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < > >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x08,0x00,  #     *
0x0E,0x00,  #     ***
0x07,0x80,  #      ****
0x01,0xE0,  #        ****
0x00,0x70,  #          ***
0x01,0xE0,  #        ****
0x07,0x80,  #      ****
0x0E,0x00,  #     ***
0x08,0x00,  #     *
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < ? >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xC0,  #       ****
0x07,0xE0,  #      ******
0x0E,0x30,  #     ***   **
0x0C,0x30,  #     **    **
0x00,0x70,  #          ***
0x00,0xE0,  #         ***
0x01,0xC0,  #        ***
0x01,0x80,  #        **
0x01,0x80,  #        **
0x00,0x00,  #
0x01,0x80,  #        **
0x01,0x80,  #        **
0x00,0x00,  #
0x00,0x00,  #
###################### < @ >
0x00,0x00,  #
0x07,0xC0,  #      *****
0x0C,0x30,  #     **    **
0x13,0x78,  #    *  ** ****
0x17,0xE8,  #    * ****** *
0x2C,0xC8,  #   * **  **  *
0x2C,0xC8,  #   * **  **  *
0x2C,0xC8,  #   * **  **  *
0x2F,0xD0,  #   * ****** *
0x26,0xE0,  #   * *  ****
0x10,0x08,  #    *        *
0x08,0x10,  #     *      *
0x07,0xE0,  #      ******
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < A >
0x00,0x00,  #
0x00,0x00,  #
0x03,0x80,  #       ***
0x03,0x80,  #       ***
0x06,0xC0,  #      ** **
0x06,0xC0,  #      ** **
0x06,0xC0,  #      ** **
0x0C,0x60,  #     **   **
0x0C,0x60,  #     **   **
0x0F,0xE0,  #     *******
0x1F,0xF0,  #    *********
0x18,0x30,  #    **     **
0x18,0x30,  #    **     **
0x30,0x18,  #   **       **
0x00,0x00,  #
0x00,0x00,  #
###################### < B >
0x00,0x00,  #
0x00,0x00,  #
0x1F,0xE0,  #    ********
0x1F,0xF0,  #    *********
0x18,0x30,  #    **     **
0x18,0x30,  #    **     **
0x18,0x30,  #    **     **
0x1F,0xE0,  #    ********
0x1F,0xF0,  #    *********
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x1F,0xF0,  #    *********
0x1F,0xE0,  #    ********
0x00,0x00,  #
0x00,0x00,  #
###################### < C >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xE0,  #       *****
0x0F,0xF0,  #     ********
0x0C,0x38,  #     **    ***
0x1C,0x10,  #    ***     *
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x1C,0x10,  #    ***     *
0x0C,0x38,  #     **    ***
0x0F,0xF0,  #     ********
0x03,0xE0,  #       *****
0x00,0x00,  #
0x00,0x00,  #
###################### < D >
0x00,0x00,  #
0x00,0x00,  #
0x1F,0xC0,  #    *******
0x1F,0xF0,  #    *********
0x18,0x30,  #    **     **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x30,  #    **     **
0x1F,0xF0,  #    *********
0x1F,0xC0,  #    *******
0x00,0x00,  #
0x00,0x00,  #
###################### < E >
0x00,0x00,  #
0x00,0x00,  #
0x0F,0xF8,  #     *********
0x0F,0xF8,  #     *********
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0F,0xF8,  #     *********
0x0F,0xF8,  #     *********
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0F,0xF8,  #     *********
0x0F,0xF8,  #     *********
0x00,0x00,  #
0x00,0x00,  #
###################### < F >
0x00,0x00,  #
0x00,0x00,  #
0x0F,0xF0,  #     ********
0x0F,0xF0,  #     ********
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0F,0xE0,  #     *******
0x0F,0xE0,  #     *******
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x00,0x00,  #
###################### < G >
0x00,0x00,  #
0x00,0x00,  #
0x07,0xE0,  #      ******
0x1F,0xF0,  #    *********
0x18,0x38,  #    **     ***
0x38,0x10,  #   ***      *
0x30,0x00,  #   **
0x30,0x00,  #   **
0x30,0xF8,  #   **    *****
0x30,0xF8,  #   **    *****
0x38,0x18,  #   ***      **
0x18,0x38,  #    **     ***
0x1F,0xF8,  #    **********
0x07,0xE0,  #      ******
0x00,0x00,  #
0x00,0x00,  #
###################### < H >
0x00,0x00,  #
0x00,0x00,  #
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x1F,0xF8,  #    **********
0x1F,0xF8,  #    **********
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x00,0x00,  #
0x00,0x00,  #
###################### < I >
0x00,0x00,  #
0x00,0x00,  #
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x18,0x00,  #    **
0x00,0x00,  #
0x00,0x00,  #
###################### < J >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x30,  #           **
0x00,0x30,  #           **
0x00,0x30,  #           **
0x00,0x30,  #           **
0x00,0x30,  #           **
0x00,0x30,  #           **
0x00,0x30,  #           **
0x00,0x30,  #           **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x07,0xE0,  #      ******
0x03,0xC0,  #       ****
0x00,0x00,  #
0x00,0x00,  #
###################### < K >
0x00,0x00,  #
0x00,0x00,  #
0x18,0x18,  #    **      **
0x18,0x30,  #    **     **
0x18,0x60,  #    **    **
0x18,0xC0,  #    **   **
0x19,0x80,  #    **  **
0x1B,0xC0,  #    ** ****
0x1E,0xC0,  #    **** **
0x1C,0x60,  #    ***   **
0x18,0x70,  #    **    ***
0x18,0x30,  #    **     **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x00,0x00,  #
0x00,0x00,  #
###################### < L >
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0F,0xF0,  #     ********
0x0F,0xF0,  #     ********
0x00,0x00,  #
0x00,0x00,  #
###################### < M >
0x00,0x00,  #
0x00,0x00,  #
0x38,0x38,  #   ***     ***
0x38,0x38,  #   ***     ***
0x3C,0x78,  #   ****   ****
0x3C,0x78,  #   ****   ****
0x34,0x58,  #   ** *   * **
0x36,0xD8,  #   ** ** ** **
0x36,0xD8,  #   ** ** ** **
0x36,0xD8,  #   ** ** ** **
0x33,0x98,  #   **  ***  **
0x33,0x98,  #   **  ***  **
0x33,0x98,  #   **  ***  **
0x31,0x18,  #   **   *   **
0x00,0x00,  #
0x00,0x00,  #
###################### < N >
0x00,0x00,  #
0x00,0x00,  #
0x18,0x18,  #    **      **
0x1C,0x18,  #    ***     **
0x1E,0x18,  #    ****    **
0x1E,0x18,  #    ****    **
0x1B,0x18,  #    ** **   **
0x19,0x98,  #    **  **  **
0x19,0x98,  #    **  **  **
0x18,0xD8,  #    **   ** **
0x18,0x78,  #    **    ****
0x18,0x78,  #    **    ****
0x18,0x38,  #    **     ***
0x18,0x18,  #    **      **
0x00,0x00,  #
0x00,0x00,  #
###################### < O >
0x00,0x00,  #
0x00,0x00,  #
0x07,0xC0,  #      *****
0x1F,0xF0,  #    *********
0x18,0x30,  #    **     **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x18,0x30,  #    **     **
0x1F,0xF0,  #    *********
0x07,0xC0,  #      *****
0x00,0x00,  #
0x00,0x00,  #
###################### < P >
0x00,0x00,  #
0x00,0x00,  #
0x0F,0xE0,  #     *******
0x0F,0xF0,  #     ********
0x0C,0x38,  #     **    ***
0x0C,0x18,  #     **     **
0x0C,0x38,  #     **    ***
0x0F,0xF0,  #     ********
0x0F,0xE0,  #     *******
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x00,0x00,  #
###################### < Q >
0x00,0x00,  #
0x00,0x00,  #
0x07,0xC0,  #      *****
0x1F,0xF0,  #    *********
0x18,0x30,  #    **     **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x30,0x18,  #   **       **
0x31,0xB8,  #   **   ** ***
0x18,0xF0,  #    **   ****
0x1F,0xF0,  #    ********
0x07,0xB0,  #      **** **
0x00,0x18,  #            **
0x00,0x00,  #
###################### < R >
0x00,0x00,  #
0x00,0x00,  #
0x1F,0xE0,  #    ********
0x1F,0xF0,  #    *********
0x18,0x38,  #    **     ***
0x18,0x18,  #    **      **
0x18,0x38,  #    **     ***
0x1F,0xF0,  #    *********
0x1F,0xC0,  #    *******
0x18,0xE0,  #    **   ***
0x18,0x70,  #    **    ***
0x18,0x30,  #    **     **
0x18,0x38,  #    **     ***
0x18,0x1C,  #    **      ***
0x00,0x00,  #
0x00,0x00,  #
###################### < S >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xE0,  #       *****
0x07,0xF0,  #      *******
0x0E,0x38,  #     ***   **
0x0C,0x18,  #     **     **
0x0F,0x00,  #     ****
0x07,0xE0,  #      ******
0x01,0xF0,  #        *****
0x00,0x38,  #           ***
0x0C,0x18,  #     **     **
0x0E,0x38,  #     ***   ***
0x07,0xF0,  #      *******
0x03,0xE0,  #       *****
0x00,0x00,  #
0x00,0x00,  #
###################### < T >
0x00,0x00,  #
0x00,0x00,  #
0x1F,0xF8,  #    **********
0x1F,0xF8,  #    **********
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x00,0x00,  #
0x00,0x00,  #
###################### < U >
0x00,0x00,  #
0x00,0x00,  #
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x18,0x18,  #    **      **
0x1C,0x38,  #    ***    ***
0x0F,0xF0,  #     ********
0x07,0xE0,  #      ******
0x00,0x00,  #
0x00,0x00,  #
###################### < V >
0x00,0x00,  #
0x00,0x00,  #
0x30,0x18,  #   **       **
0x18,0x30,  #    **     **
0x18,0x30,  #    **     **
0x18,0x30,  #    **     **
0x0C,0x60,  #     **   **
0x0C,0x60,  #     **   **
0x0E,0xE0,  #     *** ***
0x06,0xC0,  #      ** **
0x06,0xC0,  #      ** **
0x03,0x80,  #       ***
0x03,0x80,  #       ***
0x03,0x80,  #       ***
0x00,0x00,  #
0x00,0x00,  #
###################### < W >
0x00,0x00,  #
0x00,0x00,  #
0x31,0xC6,  #   **   ***   **
0x31,0xC6,  #   **   ***   **
0x31,0xC6,  #   **   ***   **
0x1B,0x6C,  #    ** ** ** **
0x1B,0x6C,  #    ** ** ** **
0x1B,0x6C,  #    ** ** ** **
0x1B,0x6C,  #    ** ** ** **
0x1B,0x6C,  #    ** ** ** **
0x0E,0x38,  #     ***   ***
0x0E,0x38,  #     ***   ***
0x0E,0x38,  #     ***   ***
0x0E,0x38,  #     ***   ***
0x00,0x00,  #
0x00,0x00,  #
###################### < X >
0x00,0x00,  #
0x00,0x00,  #
0x18,0x30,  #    **     **
0x1C,0x70,  #    ***   ***
0x0C,0x60,  #     **   **
0x06,0xC0,  #      ** **
0x07,0xC0,  #      *****
0x03,0x80,  #       ***
0x03,0x80,  #       ***
0x07,0xC0,  #      *****
0x06,0xC0,  #      ** **
0x0C,0x60,  #     **   **
0x1C,0x70,  #    ***   ***
0x18,0x30,  #    **     **
0x00,0x00,  #
0x00,0x00,  #
###################### < Y >
0x00,0x00,  #
0x00,0x00,  #
0x18,0x18,  #    **      **
0x1C,0x38,  #    ***    ***
0x0C,0x30,  #     **    **
0x06,0x60,  #      **  **
0x06,0x60,  #      **  **
0x03,0xC0,  #       ****
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x00,0x00,  #
0x00,0x00,  #
###################### < Z >
0x00,0x00,  #
0x00,0x00,  #
0x07,0xF8,  #      ********
0x07,0xF8,  #      ********
0x00,0x30,  #           **
0x00,0x60,  #          **
0x00,0xE0,  #         ***
0x00,0xC0,  #         **
0x01,0x80,  #        **
0x03,0x80,  #       ***
0x03,0x00,  #       **
0x06,0x00,  #      **
0x0F,0xF8,  #     *********
0x0F,0xF8,  #     *********
0x00,0x00,  #
0x00,0x00,  #
###################### < [ >
0x00,0x00,  #
0x0F,0x00,  #     ****
0x0F,0x00,  #     ****
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0F,0x00,  #     ****
0x0F,0x00,  #     ****
0x00,0x00,  #
###################### < backslash >
0x00,0x00,  #
0x00,0x00,  #
0x03,0x00,  #       **
0x03,0x00,  #       **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0x60,  #          **
0x00,0x60,  #          **
0x00,0x00,  #          **
0x00,0x00,  #
###################### < ] >
0x00,0x00,  #
0x0F,0x00,  #     ****
0x0F,0x00,  #     ****
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x0F,0x00,  #     ****
0x0F,0x00,  #     ****
0x00,0x00,  #
###################### < ^ >
0x00,0x00,  #
0x01,0x80,  #        **
0x03,0xC0,  #       ****
0x03,0xC0,  #       ****
0x06,0x60,  #      **  **
0x06,0x60,  #      **  **
0x06,0x60,  #      **  **
0x0C,0x30,  #     **    **
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < _ >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0xFF,0xFF,  # ****************
0xFF,0xFF,  # ****************
0x00,0x00,  #
###################### < ` >
0x00,0x00,  #
0x00,0x00,  #
0x01,0x80,  #        **
0x00,0xC0,  #         **
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
###################### < a >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x07,0xC0,  #      *****
0x0F,0xE0,  #     *******
0x0C,0x60,  #     **   **
0x01,0xE0,  #        * **
0x07,0xE0,  #       *****
0x0E,0x60,  #     ***  **
0x0C,0x60,  #     **   **
0x0F,0xE0,  #     *******
0x07,0xB0,  #      ****
0x00,0x00,  #
0x00,0x00,  #
###################### < b >
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0D,0xC0,  #     ** ***
0x0F,0xE0,  #     *******
0x0E,0x70,  #     ***  ***
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x0F,0xE0,  #     *******
0x0D,0xC0,  #     ** ***
0x00,0x00,  #
0x00,0x00,  #
###################### < c >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x03,0xC0,  #       ****
0x07,0xE0,  #      ******
0x0E,0x60,  #     ***  **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0E,0x60,  #     ***  **
0x07,0xE0,  #      ******
0x03,0xC0,  #       ****
0x00,0x00,  #
0x00,0x00,  #
###################### < d >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x30,  #           **
0x00,0x30,  #           **
0x00,0x30,  #           **
0x03,0xB0,  #       *** **
0x07,0xF0,  #      *******
0x0E,0x70,  #     ***  ***
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x07,0xF0,  #      *******
0x03,0xB0,  #       *** **
0x00,0x00,  #
0x00,0x00,  #
###################### < e >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x03,0x80,  #       ***
0x07,0xC0,  #      *****
0x0C,0x60,  #     **   **
0x0F,0xE0,  #     *******
0x0F,0xE0,  #     *******
0x0C,0x00,  #     **
0x0E,0x60,  #     ***  **
0x07,0xC0,  #      *****
0x03,0x80,  #       ***
0x00,0x00,  #
0x00,0x00,  #
###################### < f >
0x00,0x00,  #
0x00,0x00,  #
0x03,0xC0,  #       ****
0x07,0xC0,  #      *****
0x06,0x00,  #      **
0x0F,0x80,  #     *****
0x0F,0x80,  #     *****
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x06,0x00,  #      **
0x00,0x00,  #
0x00,0x00,  #
###################### < g >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x07,0x60,  #      *** **
0x0F,0xE0,  #     *******
0x1C,0xE0,  #    ***  ***
0x18,0x60,  #    **    **
0x18,0x60,  #    **    **
0x18,0x60,  #    **    **
0x1C,0xE0,  #    ***  ***
0x0F,0xE0,  #     *******
0x07,0x60,  #      *** **
0x18,0x60,  #    **    **
0x1F,0xE0,  #    ********
0x0F,0xC0,  #     ******
###################### < h >
0x00,0x00,  #
0x00,0x00,  # 
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0D,0xE0,  #     ** ****
0x0F,0xF0,  #     ********
0x0E,0x30,  #     ***   **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x00,0x00,  #
0x00,0x00,  #
###################### < i >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x00,0x00,  #
###################### < j >
0x00,0x00,  #
0x00,0x00,  #
0x03,0x00,  #       **
0x03,0x00,  #       **
0x00,0x00,  #
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x0F,0x00,  #     ****
0x0E,0x00,  #     ***
###################### < k >
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x60,  #     **   **
0x0C,0xC0,  #     **  **
0x0D,0x80,  #     ** **
0x0F,0x80,  #     *****
0x0F,0xC0,  #     ******
0x0E,0xC0,  #     *** **
0x0C,0xC0,  #     **  **
0x0C,0x60,  #     **   **
0x0C,0x60,  #     **   **
0x00,0x00,  #
0x00,0x00,  #
###################### < l >
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x00,0x00,  #
0x00,0x00,  #
###################### < m >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x37,0x38,  #   ** ***  ***
0x3F,0xFC,  #   ************
0x39,0xCC,  #   ***  ***  **
0x31,0x8C,  #   **   **   **
0x31,0x8C,  #   **   **   **
0x31,0x8C,  #   **   **   **
0x31,0x8C,  #   **   **   **
0x31,0x8C,  #   **   **   **
0x31,0x8C,  #   **   **   **
0x00,0x00,  #
0x00,0x00,  #
###################### < n >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0D,0xE0,  #     ** ****
0x0F,0xF0,  #     ********
0x0E,0x30,  #     ***   **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x00,0x00,  #
0x00,0x00,  #
###################### < o >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x03,0xC0,  #       ****
0x07,0xE0,  #      ******
0x0E,0x70,  #     ***  ***
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x07,0xE0,  #      ******
0x03,0xC0,  #       ****
0x00,0x00,  #
0x00,0x00,  #
###################### < p >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0D,0xC0,  #     ** ***
0x0F,0xE0,  #     *******
0x0E,0x70,  #     ***  ***
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x0F,0xE0,  #     *******
0x0D,0xC0,  #     ** ***
0x0C,0x00,  #     **
0x0C,0x00,  #     **
0x0C,0x00,  #     **
###################### < q >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x03,0xB0,  #       *** **
0x07,0xF0,  #      *******
0x0E,0x70,  #     ***  ***
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0E,0x70,  #     ***  ***
0x07,0xF0,  #      *******
0x03,0xB0,  #       *** **
0x00,0x30,  #           **
0x00,0x30,  #           **
0x00,0x30,  #           **
###################### < r >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x03,0x70,  #       ** ***
0x03,0xF0,  #       ******
0x03,0x80,  #       ***
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x00,0x00,  #
0x00,0x00,  #
###################### < s >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x07,0xC0,  #      *****
0x0F,0xE0,  #     *******
0x0C,0x60,  #     **   **
0x0F,0x00,  #     ****
0x07,0xC0,  #      *****
0x00,0xE0,  #         ***
0x0C,0x60,  #     **   **
0x0F,0xE0,  #     *******
0x07,0xC0,  #      *****
0x00,0x00,  #
0x00,0x00,  #
###################### < t >
0x00,0x00,  #
0x00,0x00,  #
0x01,0x00,  #        *
0x03,0x00,  #       **
0x03,0x00,  #       **
0x07,0xC0,  #      *****
0x07,0xC0,  #      *****
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0xC0,  #       ****
0x01,0xC0,  #        ***
0x00,0x00,  #
0x00,0x00,  #
###################### < u >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x30,  #     **    **
0x0C,0x70,  #     **   ***
0x0F,0xF0,  #     ********
0x07,0xB0,  #      **** **
0x00,0x00,  #
0x00,0x00,  #
###################### < v >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x06,0x30,  #      **   **
0x06,0x30,  #      **   **
0x06,0x30,  #      **   **
0x03,0x60,  #       ** **
0x03,0x60,  #       ** **
0x03,0x60,  #       ** **
0x01,0xC0,  #        ***
0x01,0xC0,  #        ***
0x01,0xC0,  #        ***
0x00,0x00,  #
0x00,0x00,  #
###################### < w >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x31,0xC6,  #   **   ***   **
0x31,0xC6,  #   **   ***   **
0x19,0xCC,  #    **  ***  **
0x1B,0x6C,  #    ** ** ** **
0x1B,0x6C,  #    ** ** ** **
0x1B,0x6C,  #    ** ** ** **
0x0E,0x38,  #     ***   ***
0x0E,0x38,  #     ***   ***
0x0E,0x38,  #     ***   ***
0x00,0x00,  #
0x00,0x00,  #
###################### < x >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x06,0x30,  #      **   **
0x07,0x70,  #      *** ***
0x03,0x60,  #       ** **
0x01,0xC0,  #        ***
0x01,0xC0,  #        ***
0x01,0xC0,  #        ***
0x03,0x60,  #       ** **
0x07,0x70,  #      *** ***
0x06,0x30,  #      **   **
0x00,0x00,  #
0x00,0x00,  #
###################### < y >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x0C,0x18,  #     **     **
0x0C,0x18,  #     **     **
0x06,0x30,  #      **   **
0x06,0x30,  #      **   **
0x03,0x60,  #       ** **
0x03,0x60,  #       ** **
0x03,0xE0,  #       *****
0x01,0xC0,  #        ***
0x01,0xC0,  #        ***
0x01,0x80,  #        **
0x07,0x80,  #      ****
0x07,0x00,  #      ***
###################### < z >
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x03,0xF8,  #       *******
0x03,0xF8,  #       *******
0x00,0x30,  #           **
0x00,0x70,  #          ***
0x00,0xE0,  #         ***
0x01,0xC0,  #        ***
0x01,0x80,  #        **
0x03,0xF8,  #       *******
0x03,0xF8,  #       *******
0x00,0x00,  #
0x00,0x00,  #
###################### < { >
0x01,0xC0,  #        ***
0x03,0xC0,  #       ****
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x0E,0x00,  #     ***
0x0E,0x00,  #     ***
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0x00,  #       **
0x03,0xC0,  #       ****
0x01,0xC0,  #        ***
0x00,0x00,  #
###################### < | >
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
0x01,0x80,  #        **
###################### < } >
0x03,0x80,  #       ***
0x03,0xC0,  #       ****
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0x70,  #          ***
0x00,0x70,  #          ***
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x00,0xC0,  #         **
0x03,0xC0,  #       ****
0x03,0x80,  #       ***
0x00,0x00,  #
###################### < ~ >
0x00,0x00,  #
0x00,0x00,  #
0x07,0x88,  #      ****   *
0x0F,0xF8,  #     *********
0x08,0xF0,  #     *   ****
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00,  #
0x00,0x00   #
]

OCC = [
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,
0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,
0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFF,0x3F,
0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFE,0x00,0x7F,
0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xC0,0x0F,0xFF,
0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFC,0x00,0xFF,0xF8,
0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x07,0xFF,0x80,
0x00,0x3F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xF8,0x00,
0x00,0x1F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x80,0x03,
0xF8,0x0F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,
0xFC,0x07,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,
0xFC,0x03,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFC,0x01,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,
0xFC,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,
0xFC,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,
0xF8,0x1F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,
0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,
0xFF,0xE0,0x07,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,
0xF8,0x00,0x03,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFF,
0x00,0x00,0x01,0xF9,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xF8,
0x00,0x00,0x00,0xFC,0x7F,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0xC0,
0x00,0x00,0x00,0x7E,0x1F,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0x00,
0x00,0x00,0x00,0x3F,0x07,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFC,0x00,
0x00,0x00,0x00,0x1F,0x03,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xF0,0x00,
0x00,0x00,0x00,0x0F,0x81,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xC0,0x00,
0x00,0x00,0x00,0x07,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x0F,0xFF,0x80,0x00,
0x00,0x00,0x00,0x07,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xE0,0x00,0x1F,0xFF,0x00,0x00,
0x00,0x00,0x00,0x03,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xF8,0x00,0x3F,0xFC,0x00,0x00,
0x00,0x00,0x00,0x01,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFE,0x01,0x7F,0xFC,0x00,0x00,
0x00,0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x01,0xFF,0xFF,0x7F,0xF8,0x00,0x00,
0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFE,0x3F,0xFE,0xFF,0xF0,0x00,0x00,
0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xC7,0xFD,0xFF,0xF0,0x00,0x00,
0x00,0x00,0x00,0x00,0x1F,0x0F,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xF0,0x01,0xFF,0xE0,0x00,0x00,
0x00,0x00,0x00,0x00,0x0F,0x7F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xF0,0x00,0x7C,0x03,0xFF,0xE0,0x00,0x00,
0x00,0x00,0x00,0x00,0x07,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0x00,0x00,0x00,0x03,0xFF,0xE0,0x00,0x00,
0x00,0x00,0x00,0x00,0x07,0xC0,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF7,0xFF,0xFF,0xC0,0x03,0xFF,0xC0,0x00,0x00,
0x00,0x00,0x00,0x00,0x1F,0x1F,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xF8,0x07,0xFF,0xC0,0x00,0x00,
0x00,0x00,0x70,0x00,0x7C,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xC0,0x00,0x00,
0x00,0x1F,0xFF,0x80,0xF7,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xEF,0xFF,0xFF,0xFF,0xFF,0x87,0xFF,0xC0,0x00,0x00,
0x00,0xFF,0xFF,0xE1,0xDF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x03,0xBF,0xFF,0xFF,0xFF,0xFF,0xC7,0xFF,0xC0,0x00,0x00,
0x03,0xFF,0xFF,0xF1,0x7F,0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x02,0x7F,0xFF,0x00,0x07,0xFF,0xE7,0xFF,0xC0,0x00,0x00,
0x0F,0xFF,0xFF,0xF8,0xFF,0xFF,0x00,0x07,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFC,0x00,0x00,0x7F,0xF7,0xFF,0xE0,0x00,0x00,
0x3F,0xFF,0x80,0x01,0xFF,0xF8,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xF8,0x00,0x00,0x0F,0xF7,0xFF,0xE0,0x00,0x00,
0xFF,0xFC,0x00,0x03,0xFF,0xE0,0xE0,0x00,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xF0,0x1F,0x00,0x03,0xF7,0xFF,0xE0,0x00,0x03,
0xFF,0xF0,0x00,0x07,0xFF,0xC3,0xF8,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xF0,0x3F,0x80,0x01,0xF7,0xFF,0xF0,0x00,0x0F,
0xFF,0xE0,0x00,0x07,0xFF,0x83,0xF8,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xF0,0x3F,0x80,0x00,0xE3,0xFF,0xF8,0x00,0x3F,
0xFF,0x80,0x00,0x0F,0xFF,0x03,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xF0,0x1F,0x80,0x7F,0xE3,0xFF,0xFE,0x01,0xFF,
0xFE,0x00,0x00,0x0F,0xFF,0x01,0xF0,0x03,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF8,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFC,0x00,0x00,0x0F,0xFF,0x80,0x00,0x1F,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFC,0x00,0x01,0xFF,0xFD,0xFF,0xFF,0xFF,0xFF,
0xF0,0x00,0x00,0x0F,0xFF,0x80,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0x80,0x0F,0xFF,0xF9,0xFF,0xFF,0xFF,0xFF,
0xE0,0x00,0x00,0x0F,0xFF,0xC0,0x03,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xF0,0xFF,0xFF,0xFF,0xFF,
0xC0,0x00,0x00,0x0F,0xFF,0xF0,0x1F,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x0F,0xFF,0xFD,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xBF,0xBF,0xFF,0xFF,0xFE,
0x00,0x0F,0xC0,0x07,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFE,0x3F,0x9F,0xFF,0xFF,0xF8,
0x00,0x0F,0xE0,0x07,0xFF,0xFF,0xFF,0xE0,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xF0,0x1F,0x87,0xFF,0xFF,0xE0,
0x00,0x0F,0xE0,0x03,0xFF,0xFF,0xFF,0x80,0x3F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFE,0x00,0x00,0x01,0xFF,0xFF,0x00,
0x00,0x07,0xC0,0x00,0xFF,0xFF,0xFE,0x00,0x3F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x00,
0x00,0x00,0x00,0x00,0x1F,0xFF,0xF0,0x00,0x3F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
]
